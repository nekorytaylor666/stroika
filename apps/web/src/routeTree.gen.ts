/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as SeedRouteImport } from './routes/seed'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as InviteCodeRouteImport } from './routes/invite.$code'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthOrganizationSetupRouteImport } from './routes/auth/organization-setup'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as ConstructionOrgIdRouteRouteImport } from './routes/construction.$orgId/route'
import { Route as ConstructionOrgIdIndexRouteImport } from './routes/construction.$orgId/index'
import { Route as ConstructionOrgIdSettingsRouteImport } from './routes/construction.$orgId/settings'
import { Route as ConstructionOrgIdMembersRouteImport } from './routes/construction.$orgId/members'
import { Route as ConstructionOrgIdInboxRouteImport } from './routes/construction.$orgId/inbox'
import { Route as ConstructionOrgIdGanttRouteImport } from './routes/construction.$orgId/gantt'
import { Route as ConstructionOrgIdConstructionTeamsRouteImport } from './routes/construction.$orgId/construction-teams'
import { Route as ConstructionOrgIdConstructionProjectsRouteImport } from './routes/construction.$orgId/construction-projects'
import { Route as ConstructionOrgIdConstructionDocumentsRouteImport } from './routes/construction.$orgId/construction-documents'
import { Route as ConstructionOrgIdConstructionDashboardRouteImport } from './routes/construction.$orgId/construction-dashboard'
import { Route as ConstructionOrgIdCalendarRouteImport } from './routes/construction.$orgId/calendar'
import { Route as ConstructionOrgIdAttachmentsRouteImport } from './routes/construction.$orgId/attachments'
import { Route as ConstructionOrgIdAdminRouteImport } from './routes/construction.$orgId/admin'
import { Route as ConstructionOrgIdTasksIndexRouteImport } from './routes/construction.$orgId/tasks/index'
import { Route as ConstructionOrgIdTasksTaskIdRouteImport } from './routes/construction.$orgId/tasks/$taskId'
import { Route as ConstructionOrgIdMemberMemberIdRouteImport } from './routes/construction.$orgId/member.$memberId'
import { Route as ConstructionOrgIdProjectsProjectIdRouteRouteImport } from './routes/construction.$orgId/projects.$projectId/route'
import { Route as ConstructionOrgIdUserUserIdActivityRouteImport } from './routes/construction.$orgId/user.$userId/activity'
import { Route as ConstructionOrgIdTeamDepartmentIdActivityRouteImport } from './routes/construction.$orgId/team.$departmentId/activity'
import { Route as ConstructionOrgIdProjectsProjectIdTeamRouteImport } from './routes/construction.$orgId/projects.$projectId/team'
import { Route as ConstructionOrgIdProjectsProjectIdTasksRouteImport } from './routes/construction.$orgId/projects.$projectId/tasks'
import { Route as ConstructionOrgIdProjectsProjectIdSettingsRouteImport } from './routes/construction.$orgId/projects.$projectId/settings'
import { Route as ConstructionOrgIdProjectsProjectIdOverviewRouteImport } from './routes/construction.$orgId/projects.$projectId/overview'
import { Route as ConstructionOrgIdProjectsProjectIdLegalDocumentsRouteImport } from './routes/construction.$orgId/projects.$projectId/legal-documents'
import { Route as ConstructionOrgIdProjectsProjectIdFinanceRouteImport } from './routes/construction.$orgId/projects.$projectId/finance'
import { Route as ConstructionOrgIdProjectsProjectIdCalendarRouteImport } from './routes/construction.$orgId/projects.$projectId/calendar'
import { Route as ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport } from './routes/construction.$orgId/projects.$projectId/attachments'
import { Route as ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport } from './routes/construction.$orgId/projects.$projectId/analytics'
import { Route as ConstructionOrgIdProjectsProjectIdActivityRouteImport } from './routes/construction.$orgId/projects.$projectId/activity'

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const SeedRoute = SeedRouteImport.update({
  id: '/seed',
  path: '/seed',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const InviteCodeRoute = InviteCodeRouteImport.update({
  id: '/invite/$code',
  path: '/invite/$code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthOrganizationSetupRoute = AuthOrganizationSetupRouteImport.update({
  id: '/organization-setup',
  path: '/organization-setup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const ConstructionOrgIdRouteRoute = ConstructionOrgIdRouteRouteImport.update({
  id: '/construction/$orgId',
  path: '/construction/$orgId',
  getParentRoute: () => rootRouteImport,
} as any)
const ConstructionOrgIdIndexRoute = ConstructionOrgIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdSettingsRoute =
  ConstructionOrgIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdMembersRoute =
  ConstructionOrgIdMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdInboxRoute = ConstructionOrgIdInboxRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdGanttRoute = ConstructionOrgIdGanttRouteImport.update({
  id: '/gantt',
  path: '/gantt',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdConstructionTeamsRoute =
  ConstructionOrgIdConstructionTeamsRouteImport.update({
    id: '/construction-teams',
    path: '/construction-teams',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionProjectsRoute =
  ConstructionOrgIdConstructionProjectsRouteImport.update({
    id: '/construction-projects',
    path: '/construction-projects',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionDocumentsRoute =
  ConstructionOrgIdConstructionDocumentsRouteImport.update({
    id: '/construction-documents',
    path: '/construction-documents',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionDashboardRoute =
  ConstructionOrgIdConstructionDashboardRouteImport.update({
    id: '/construction-dashboard',
    path: '/construction-dashboard',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdCalendarRoute =
  ConstructionOrgIdCalendarRouteImport.update({
    id: '/calendar',
    path: '/calendar',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdAttachmentsRoute =
  ConstructionOrgIdAttachmentsRouteImport.update({
    id: '/attachments',
    path: '/attachments',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdAdminRoute = ConstructionOrgIdAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdTasksIndexRoute =
  ConstructionOrgIdTasksIndexRouteImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdTasksTaskIdRoute =
  ConstructionOrgIdTasksTaskIdRouteImport.update({
    id: '/tasks/$taskId',
    path: '/tasks/$taskId',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdMemberMemberIdRoute =
  ConstructionOrgIdMemberMemberIdRouteImport.update({
    id: '/member/$memberId',
    path: '/member/$memberId',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdRouteRoute =
  ConstructionOrgIdProjectsProjectIdRouteRouteImport.update({
    id: '/projects/$projectId',
    path: '/projects/$projectId',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdUserUserIdActivityRoute =
  ConstructionOrgIdUserUserIdActivityRouteImport.update({
    id: '/user/$userId/activity',
    path: '/user/$userId/activity',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdTeamDepartmentIdActivityRoute =
  ConstructionOrgIdTeamDepartmentIdActivityRouteImport.update({
    id: '/team/$departmentId/activity',
    path: '/team/$departmentId/activity',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdTeamRoute =
  ConstructionOrgIdProjectsProjectIdTeamRouteImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdTasksRoute =
  ConstructionOrgIdProjectsProjectIdTasksRouteImport.update({
    id: '/tasks',
    path: '/tasks',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdSettingsRoute =
  ConstructionOrgIdProjectsProjectIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdOverviewRoute =
  ConstructionOrgIdProjectsProjectIdOverviewRouteImport.update({
    id: '/overview',
    path: '/overview',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute =
  ConstructionOrgIdProjectsProjectIdLegalDocumentsRouteImport.update({
    id: '/legal-documents',
    path: '/legal-documents',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdFinanceRoute =
  ConstructionOrgIdProjectsProjectIdFinanceRouteImport.update({
    id: '/finance',
    path: '/finance',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdCalendarRoute =
  ConstructionOrgIdProjectsProjectIdCalendarRouteImport.update({
    id: '/calendar',
    path: '/calendar',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdAttachmentsRoute =
  ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport.update({
    id: '/attachments',
    path: '/attachments',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdAnalyticsRoute =
  ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdActivityRoute =
  ConstructionOrgIdProjectsProjectIdActivityRouteImport.update({
    id: '/activity',
    path: '/activity',
    getParentRoute: () => ConstructionOrgIdProjectsProjectIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/seed': typeof SeedRoute
  '/settings': typeof SettingsRoute
  '/construction/$orgId': typeof ConstructionOrgIdRouteRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/organization-setup': typeof AuthOrganizationSetupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/invite/$code': typeof InviteCodeRoute
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/calendar': typeof ConstructionOrgIdCalendarRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId/': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId': typeof ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren
  '/construction/$orgId/member/$memberId': typeof ConstructionOrgIdMemberMemberIdRoute
  '/construction/$orgId/tasks/$taskId': typeof ConstructionOrgIdTasksTaskIdRoute
  '/construction/$orgId/tasks': typeof ConstructionOrgIdTasksIndexRoute
  '/construction/$orgId/projects/$projectId/activity': typeof ConstructionOrgIdProjectsProjectIdActivityRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/calendar': typeof ConstructionOrgIdProjectsProjectIdCalendarRoute
  '/construction/$orgId/projects/$projectId/finance': typeof ConstructionOrgIdProjectsProjectIdFinanceRoute
  '/construction/$orgId/projects/$projectId/legal-documents': typeof ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
  '/construction/$orgId/team/$departmentId/activity': typeof ConstructionOrgIdTeamDepartmentIdActivityRoute
  '/construction/$orgId/user/$userId/activity': typeof ConstructionOrgIdUserUserIdActivityRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/seed': typeof SeedRoute
  '/settings': typeof SettingsRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/organization-setup': typeof AuthOrganizationSetupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/invite/$code': typeof InviteCodeRoute
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/calendar': typeof ConstructionOrgIdCalendarRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId': typeof ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren
  '/construction/$orgId/member/$memberId': typeof ConstructionOrgIdMemberMemberIdRoute
  '/construction/$orgId/tasks/$taskId': typeof ConstructionOrgIdTasksTaskIdRoute
  '/construction/$orgId/tasks': typeof ConstructionOrgIdTasksIndexRoute
  '/construction/$orgId/projects/$projectId/activity': typeof ConstructionOrgIdProjectsProjectIdActivityRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/calendar': typeof ConstructionOrgIdProjectsProjectIdCalendarRoute
  '/construction/$orgId/projects/$projectId/finance': typeof ConstructionOrgIdProjectsProjectIdFinanceRoute
  '/construction/$orgId/projects/$projectId/legal-documents': typeof ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
  '/construction/$orgId/team/$departmentId/activity': typeof ConstructionOrgIdTeamDepartmentIdActivityRoute
  '/construction/$orgId/user/$userId/activity': typeof ConstructionOrgIdUserUserIdActivityRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/seed': typeof SeedRoute
  '/settings': typeof SettingsRoute
  '/construction/$orgId': typeof ConstructionOrgIdRouteRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/organization-setup': typeof AuthOrganizationSetupRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/invite/$code': typeof InviteCodeRoute
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/calendar': typeof ConstructionOrgIdCalendarRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId/': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId': typeof ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren
  '/construction/$orgId/member/$memberId': typeof ConstructionOrgIdMemberMemberIdRoute
  '/construction/$orgId/tasks/$taskId': typeof ConstructionOrgIdTasksTaskIdRoute
  '/construction/$orgId/tasks/': typeof ConstructionOrgIdTasksIndexRoute
  '/construction/$orgId/projects/$projectId/activity': typeof ConstructionOrgIdProjectsProjectIdActivityRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/calendar': typeof ConstructionOrgIdProjectsProjectIdCalendarRoute
  '/construction/$orgId/projects/$projectId/finance': typeof ConstructionOrgIdProjectsProjectIdFinanceRoute
  '/construction/$orgId/projects/$projectId/legal-documents': typeof ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
  '/construction/$orgId/team/$departmentId/activity': typeof ConstructionOrgIdTeamDepartmentIdActivityRoute
  '/construction/$orgId/user/$userId/activity': typeof ConstructionOrgIdUserUserIdActivityRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/seed'
    | '/settings'
    | '/construction/$orgId'
    | '/auth/forgot-password'
    | '/auth/organization-setup'
    | '/auth/reset-password'
    | '/invite/$code'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/calendar'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId/'
    | '/construction/$orgId/projects/$projectId'
    | '/construction/$orgId/member/$memberId'
    | '/construction/$orgId/tasks/$taskId'
    | '/construction/$orgId/tasks'
    | '/construction/$orgId/projects/$projectId/activity'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/calendar'
    | '/construction/$orgId/projects/$projectId/finance'
    | '/construction/$orgId/projects/$projectId/legal-documents'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
    | '/construction/$orgId/team/$departmentId/activity'
    | '/construction/$orgId/user/$userId/activity'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/seed'
    | '/settings'
    | '/auth/forgot-password'
    | '/auth/organization-setup'
    | '/auth/reset-password'
    | '/invite/$code'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/calendar'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId'
    | '/construction/$orgId/projects/$projectId'
    | '/construction/$orgId/member/$memberId'
    | '/construction/$orgId/tasks/$taskId'
    | '/construction/$orgId/tasks'
    | '/construction/$orgId/projects/$projectId/activity'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/calendar'
    | '/construction/$orgId/projects/$projectId/finance'
    | '/construction/$orgId/projects/$projectId/legal-documents'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
    | '/construction/$orgId/team/$departmentId/activity'
    | '/construction/$orgId/user/$userId/activity'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/seed'
    | '/settings'
    | '/construction/$orgId'
    | '/auth/forgot-password'
    | '/auth/organization-setup'
    | '/auth/reset-password'
    | '/invite/$code'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/calendar'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId/'
    | '/construction/$orgId/projects/$projectId'
    | '/construction/$orgId/member/$memberId'
    | '/construction/$orgId/tasks/$taskId'
    | '/construction/$orgId/tasks/'
    | '/construction/$orgId/projects/$projectId/activity'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/calendar'
    | '/construction/$orgId/projects/$projectId/finance'
    | '/construction/$orgId/projects/$projectId/legal-documents'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
    | '/construction/$orgId/team/$departmentId/activity'
    | '/construction/$orgId/user/$userId/activity'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  SeedRoute: typeof SeedRoute
  SettingsRoute: typeof SettingsRoute
  ConstructionOrgIdRouteRoute: typeof ConstructionOrgIdRouteRouteWithChildren
  InviteCodeRoute: typeof InviteCodeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/seed': {
      id: '/seed'
      path: '/seed'
      fullPath: '/seed'
      preLoaderRoute: typeof SeedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/invite/$code': {
      id: '/invite/$code'
      path: '/invite/$code'
      fullPath: '/invite/$code'
      preLoaderRoute: typeof InviteCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/organization-setup': {
      id: '/auth/organization-setup'
      path: '/organization-setup'
      fullPath: '/auth/organization-setup'
      preLoaderRoute: typeof AuthOrganizationSetupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/construction/$orgId': {
      id: '/construction/$orgId'
      path: '/construction/$orgId'
      fullPath: '/construction/$orgId'
      preLoaderRoute: typeof ConstructionOrgIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/construction/$orgId/': {
      id: '/construction/$orgId/'
      path: '/'
      fullPath: '/construction/$orgId/'
      preLoaderRoute: typeof ConstructionOrgIdIndexRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/settings': {
      id: '/construction/$orgId/settings'
      path: '/settings'
      fullPath: '/construction/$orgId/settings'
      preLoaderRoute: typeof ConstructionOrgIdSettingsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/members': {
      id: '/construction/$orgId/members'
      path: '/members'
      fullPath: '/construction/$orgId/members'
      preLoaderRoute: typeof ConstructionOrgIdMembersRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/inbox': {
      id: '/construction/$orgId/inbox'
      path: '/inbox'
      fullPath: '/construction/$orgId/inbox'
      preLoaderRoute: typeof ConstructionOrgIdInboxRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/gantt': {
      id: '/construction/$orgId/gantt'
      path: '/gantt'
      fullPath: '/construction/$orgId/gantt'
      preLoaderRoute: typeof ConstructionOrgIdGanttRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-teams': {
      id: '/construction/$orgId/construction-teams'
      path: '/construction-teams'
      fullPath: '/construction/$orgId/construction-teams'
      preLoaderRoute: typeof ConstructionOrgIdConstructionTeamsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-projects': {
      id: '/construction/$orgId/construction-projects'
      path: '/construction-projects'
      fullPath: '/construction/$orgId/construction-projects'
      preLoaderRoute: typeof ConstructionOrgIdConstructionProjectsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-documents': {
      id: '/construction/$orgId/construction-documents'
      path: '/construction-documents'
      fullPath: '/construction/$orgId/construction-documents'
      preLoaderRoute: typeof ConstructionOrgIdConstructionDocumentsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-dashboard': {
      id: '/construction/$orgId/construction-dashboard'
      path: '/construction-dashboard'
      fullPath: '/construction/$orgId/construction-dashboard'
      preLoaderRoute: typeof ConstructionOrgIdConstructionDashboardRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/calendar': {
      id: '/construction/$orgId/calendar'
      path: '/calendar'
      fullPath: '/construction/$orgId/calendar'
      preLoaderRoute: typeof ConstructionOrgIdCalendarRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/attachments': {
      id: '/construction/$orgId/attachments'
      path: '/attachments'
      fullPath: '/construction/$orgId/attachments'
      preLoaderRoute: typeof ConstructionOrgIdAttachmentsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/admin': {
      id: '/construction/$orgId/admin'
      path: '/admin'
      fullPath: '/construction/$orgId/admin'
      preLoaderRoute: typeof ConstructionOrgIdAdminRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/tasks/': {
      id: '/construction/$orgId/tasks/'
      path: '/tasks'
      fullPath: '/construction/$orgId/tasks'
      preLoaderRoute: typeof ConstructionOrgIdTasksIndexRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/tasks/$taskId': {
      id: '/construction/$orgId/tasks/$taskId'
      path: '/tasks/$taskId'
      fullPath: '/construction/$orgId/tasks/$taskId'
      preLoaderRoute: typeof ConstructionOrgIdTasksTaskIdRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/member/$memberId': {
      id: '/construction/$orgId/member/$memberId'
      path: '/member/$memberId'
      fullPath: '/construction/$orgId/member/$memberId'
      preLoaderRoute: typeof ConstructionOrgIdMemberMemberIdRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId': {
      id: '/construction/$orgId/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/construction/$orgId/projects/$projectId'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/user/$userId/activity': {
      id: '/construction/$orgId/user/$userId/activity'
      path: '/user/$userId/activity'
      fullPath: '/construction/$orgId/user/$userId/activity'
      preLoaderRoute: typeof ConstructionOrgIdUserUserIdActivityRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/team/$departmentId/activity': {
      id: '/construction/$orgId/team/$departmentId/activity'
      path: '/team/$departmentId/activity'
      fullPath: '/construction/$orgId/team/$departmentId/activity'
      preLoaderRoute: typeof ConstructionOrgIdTeamDepartmentIdActivityRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/team': {
      id: '/construction/$orgId/projects/$projectId/team'
      path: '/team'
      fullPath: '/construction/$orgId/projects/$projectId/team'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdTeamRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/tasks': {
      id: '/construction/$orgId/projects/$projectId/tasks'
      path: '/tasks'
      fullPath: '/construction/$orgId/projects/$projectId/tasks'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdTasksRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/settings': {
      id: '/construction/$orgId/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/construction/$orgId/projects/$projectId/settings'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdSettingsRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/overview': {
      id: '/construction/$orgId/projects/$projectId/overview'
      path: '/overview'
      fullPath: '/construction/$orgId/projects/$projectId/overview'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdOverviewRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/legal-documents': {
      id: '/construction/$orgId/projects/$projectId/legal-documents'
      path: '/legal-documents'
      fullPath: '/construction/$orgId/projects/$projectId/legal-documents'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdLegalDocumentsRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/finance': {
      id: '/construction/$orgId/projects/$projectId/finance'
      path: '/finance'
      fullPath: '/construction/$orgId/projects/$projectId/finance'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdFinanceRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/calendar': {
      id: '/construction/$orgId/projects/$projectId/calendar'
      path: '/calendar'
      fullPath: '/construction/$orgId/projects/$projectId/calendar'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdCalendarRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/attachments': {
      id: '/construction/$orgId/projects/$projectId/attachments'
      path: '/attachments'
      fullPath: '/construction/$orgId/projects/$projectId/attachments'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/analytics': {
      id: '/construction/$orgId/projects/$projectId/analytics'
      path: '/analytics'
      fullPath: '/construction/$orgId/projects/$projectId/analytics'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/activity': {
      id: '/construction/$orgId/projects/$projectId/activity'
      path: '/activity'
      fullPath: '/construction/$orgId/projects/$projectId/activity'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdActivityRouteImport
      parentRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRoute
    }
  }
}

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthOrganizationSetupRoute: typeof AuthOrganizationSetupRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthOrganizationSetupRoute: AuthOrganizationSetupRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ConstructionOrgIdProjectsProjectIdRouteRouteChildren {
  ConstructionOrgIdProjectsProjectIdActivityRoute: typeof ConstructionOrgIdProjectsProjectIdActivityRoute
  ConstructionOrgIdProjectsProjectIdAnalyticsRoute: typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  ConstructionOrgIdProjectsProjectIdAttachmentsRoute: typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  ConstructionOrgIdProjectsProjectIdCalendarRoute: typeof ConstructionOrgIdProjectsProjectIdCalendarRoute
  ConstructionOrgIdProjectsProjectIdFinanceRoute: typeof ConstructionOrgIdProjectsProjectIdFinanceRoute
  ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute: typeof ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute
  ConstructionOrgIdProjectsProjectIdOverviewRoute: typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  ConstructionOrgIdProjectsProjectIdSettingsRoute: typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  ConstructionOrgIdProjectsProjectIdTasksRoute: typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  ConstructionOrgIdProjectsProjectIdTeamRoute: typeof ConstructionOrgIdProjectsProjectIdTeamRoute
}

const ConstructionOrgIdProjectsProjectIdRouteRouteChildren: ConstructionOrgIdProjectsProjectIdRouteRouteChildren =
  {
    ConstructionOrgIdProjectsProjectIdActivityRoute:
      ConstructionOrgIdProjectsProjectIdActivityRoute,
    ConstructionOrgIdProjectsProjectIdAnalyticsRoute:
      ConstructionOrgIdProjectsProjectIdAnalyticsRoute,
    ConstructionOrgIdProjectsProjectIdAttachmentsRoute:
      ConstructionOrgIdProjectsProjectIdAttachmentsRoute,
    ConstructionOrgIdProjectsProjectIdCalendarRoute:
      ConstructionOrgIdProjectsProjectIdCalendarRoute,
    ConstructionOrgIdProjectsProjectIdFinanceRoute:
      ConstructionOrgIdProjectsProjectIdFinanceRoute,
    ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute:
      ConstructionOrgIdProjectsProjectIdLegalDocumentsRoute,
    ConstructionOrgIdProjectsProjectIdOverviewRoute:
      ConstructionOrgIdProjectsProjectIdOverviewRoute,
    ConstructionOrgIdProjectsProjectIdSettingsRoute:
      ConstructionOrgIdProjectsProjectIdSettingsRoute,
    ConstructionOrgIdProjectsProjectIdTasksRoute:
      ConstructionOrgIdProjectsProjectIdTasksRoute,
    ConstructionOrgIdProjectsProjectIdTeamRoute:
      ConstructionOrgIdProjectsProjectIdTeamRoute,
  }

const ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren =
  ConstructionOrgIdProjectsProjectIdRouteRoute._addFileChildren(
    ConstructionOrgIdProjectsProjectIdRouteRouteChildren,
  )

interface ConstructionOrgIdRouteRouteChildren {
  ConstructionOrgIdAdminRoute: typeof ConstructionOrgIdAdminRoute
  ConstructionOrgIdAttachmentsRoute: typeof ConstructionOrgIdAttachmentsRoute
  ConstructionOrgIdCalendarRoute: typeof ConstructionOrgIdCalendarRoute
  ConstructionOrgIdConstructionDashboardRoute: typeof ConstructionOrgIdConstructionDashboardRoute
  ConstructionOrgIdConstructionDocumentsRoute: typeof ConstructionOrgIdConstructionDocumentsRoute
  ConstructionOrgIdConstructionProjectsRoute: typeof ConstructionOrgIdConstructionProjectsRoute
  ConstructionOrgIdConstructionTeamsRoute: typeof ConstructionOrgIdConstructionTeamsRoute
  ConstructionOrgIdGanttRoute: typeof ConstructionOrgIdGanttRoute
  ConstructionOrgIdInboxRoute: typeof ConstructionOrgIdInboxRoute
  ConstructionOrgIdMembersRoute: typeof ConstructionOrgIdMembersRoute
  ConstructionOrgIdSettingsRoute: typeof ConstructionOrgIdSettingsRoute
  ConstructionOrgIdIndexRoute: typeof ConstructionOrgIdIndexRoute
  ConstructionOrgIdProjectsProjectIdRouteRoute: typeof ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren
  ConstructionOrgIdMemberMemberIdRoute: typeof ConstructionOrgIdMemberMemberIdRoute
  ConstructionOrgIdTasksTaskIdRoute: typeof ConstructionOrgIdTasksTaskIdRoute
  ConstructionOrgIdTasksIndexRoute: typeof ConstructionOrgIdTasksIndexRoute
  ConstructionOrgIdTeamDepartmentIdActivityRoute: typeof ConstructionOrgIdTeamDepartmentIdActivityRoute
  ConstructionOrgIdUserUserIdActivityRoute: typeof ConstructionOrgIdUserUserIdActivityRoute
}

const ConstructionOrgIdRouteRouteChildren: ConstructionOrgIdRouteRouteChildren =
  {
    ConstructionOrgIdAdminRoute: ConstructionOrgIdAdminRoute,
    ConstructionOrgIdAttachmentsRoute: ConstructionOrgIdAttachmentsRoute,
    ConstructionOrgIdCalendarRoute: ConstructionOrgIdCalendarRoute,
    ConstructionOrgIdConstructionDashboardRoute:
      ConstructionOrgIdConstructionDashboardRoute,
    ConstructionOrgIdConstructionDocumentsRoute:
      ConstructionOrgIdConstructionDocumentsRoute,
    ConstructionOrgIdConstructionProjectsRoute:
      ConstructionOrgIdConstructionProjectsRoute,
    ConstructionOrgIdConstructionTeamsRoute:
      ConstructionOrgIdConstructionTeamsRoute,
    ConstructionOrgIdGanttRoute: ConstructionOrgIdGanttRoute,
    ConstructionOrgIdInboxRoute: ConstructionOrgIdInboxRoute,
    ConstructionOrgIdMembersRoute: ConstructionOrgIdMembersRoute,
    ConstructionOrgIdSettingsRoute: ConstructionOrgIdSettingsRoute,
    ConstructionOrgIdIndexRoute: ConstructionOrgIdIndexRoute,
    ConstructionOrgIdProjectsProjectIdRouteRoute:
      ConstructionOrgIdProjectsProjectIdRouteRouteWithChildren,
    ConstructionOrgIdMemberMemberIdRoute: ConstructionOrgIdMemberMemberIdRoute,
    ConstructionOrgIdTasksTaskIdRoute: ConstructionOrgIdTasksTaskIdRoute,
    ConstructionOrgIdTasksIndexRoute: ConstructionOrgIdTasksIndexRoute,
    ConstructionOrgIdTeamDepartmentIdActivityRoute:
      ConstructionOrgIdTeamDepartmentIdActivityRoute,
    ConstructionOrgIdUserUserIdActivityRoute:
      ConstructionOrgIdUserUserIdActivityRoute,
  }

const ConstructionOrgIdRouteRouteWithChildren =
  ConstructionOrgIdRouteRoute._addFileChildren(
    ConstructionOrgIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  SeedRoute: SeedRoute,
  SettingsRoute: SettingsRoute,
  ConstructionOrgIdRouteRoute: ConstructionOrgIdRouteRouteWithChildren,
  InviteCodeRoute: InviteCodeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

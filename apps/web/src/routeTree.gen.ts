/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as ConstructionOrgIdRouteRouteImport } from './routes/construction.$orgId/route'
import { Route as ConstructionOrgIdIndexRouteImport } from './routes/construction.$orgId/index'
import { Route as ConstructionOrgIdSettingsRouteImport } from './routes/construction.$orgId/settings'
import { Route as ConstructionOrgIdMembersRouteImport } from './routes/construction.$orgId/members'
import { Route as ConstructionOrgIdInboxRouteImport } from './routes/construction.$orgId/inbox'
import { Route as ConstructionOrgIdGanttRouteImport } from './routes/construction.$orgId/gantt'
import { Route as ConstructionOrgIdConstructionTeamsRouteImport } from './routes/construction.$orgId/construction-teams'
import { Route as ConstructionOrgIdConstructionProjectsRouteImport } from './routes/construction.$orgId/construction-projects'
import { Route as ConstructionOrgIdConstructionDocumentsRouteImport } from './routes/construction.$orgId/construction-documents'
import { Route as ConstructionOrgIdConstructionDashboardRouteImport } from './routes/construction.$orgId/construction-dashboard'
import { Route as ConstructionOrgIdAttachmentsRouteImport } from './routes/construction.$orgId/attachments'
import { Route as ConstructionOrgIdAdminRouteImport } from './routes/construction.$orgId/admin'
import { Route as ConstructionOrgIdProjectsProjectIdTeamRouteImport } from './routes/construction.$orgId/projects.$projectId.team'
import { Route as ConstructionOrgIdProjectsProjectIdTasksRouteImport } from './routes/construction.$orgId/projects.$projectId.tasks'
import { Route as ConstructionOrgIdProjectsProjectIdSettingsRouteImport } from './routes/construction.$orgId/projects.$projectId.settings'
import { Route as ConstructionOrgIdProjectsProjectIdOverviewRouteImport } from './routes/construction.$orgId/projects.$projectId.overview'
import { Route as ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport } from './routes/construction.$orgId/projects.$projectId.attachments'
import { Route as ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport } from './routes/construction.$orgId/projects.$projectId.analytics'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ConstructionOrgIdRouteRoute = ConstructionOrgIdRouteRouteImport.update({
  id: '/construction/$orgId',
  path: '/construction/$orgId',
  getParentRoute: () => rootRouteImport,
} as any)
const ConstructionOrgIdIndexRoute = ConstructionOrgIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdSettingsRoute =
  ConstructionOrgIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdMembersRoute =
  ConstructionOrgIdMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdInboxRoute = ConstructionOrgIdInboxRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdGanttRoute = ConstructionOrgIdGanttRouteImport.update({
  id: '/gantt',
  path: '/gantt',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdConstructionTeamsRoute =
  ConstructionOrgIdConstructionTeamsRouteImport.update({
    id: '/construction-teams',
    path: '/construction-teams',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionProjectsRoute =
  ConstructionOrgIdConstructionProjectsRouteImport.update({
    id: '/construction-projects',
    path: '/construction-projects',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionDocumentsRoute =
  ConstructionOrgIdConstructionDocumentsRouteImport.update({
    id: '/construction-documents',
    path: '/construction-documents',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdConstructionDashboardRoute =
  ConstructionOrgIdConstructionDashboardRouteImport.update({
    id: '/construction-dashboard',
    path: '/construction-dashboard',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdAttachmentsRoute =
  ConstructionOrgIdAttachmentsRouteImport.update({
    id: '/attachments',
    path: '/attachments',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdAdminRoute = ConstructionOrgIdAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => ConstructionOrgIdRouteRoute,
} as any)
const ConstructionOrgIdProjectsProjectIdTeamRoute =
  ConstructionOrgIdProjectsProjectIdTeamRouteImport.update({
    id: '/projects/$projectId/team',
    path: '/projects/$projectId/team',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdTasksRoute =
  ConstructionOrgIdProjectsProjectIdTasksRouteImport.update({
    id: '/projects/$projectId/tasks',
    path: '/projects/$projectId/tasks',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdSettingsRoute =
  ConstructionOrgIdProjectsProjectIdSettingsRouteImport.update({
    id: '/projects/$projectId/settings',
    path: '/projects/$projectId/settings',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdOverviewRoute =
  ConstructionOrgIdProjectsProjectIdOverviewRouteImport.update({
    id: '/projects/$projectId/overview',
    path: '/projects/$projectId/overview',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdAttachmentsRoute =
  ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport.update({
    id: '/projects/$projectId/attachments',
    path: '/projects/$projectId/attachments',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)
const ConstructionOrgIdProjectsProjectIdAnalyticsRoute =
  ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport.update({
    id: '/projects/$projectId/analytics',
    path: '/projects/$projectId/analytics',
    getParentRoute: () => ConstructionOrgIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/construction/$orgId': typeof ConstructionOrgIdRouteRouteWithChildren
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId/': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/auth': typeof AuthRoute
  '/construction/$orgId': typeof ConstructionOrgIdRouteRouteWithChildren
  '/construction/$orgId/admin': typeof ConstructionOrgIdAdminRoute
  '/construction/$orgId/attachments': typeof ConstructionOrgIdAttachmentsRoute
  '/construction/$orgId/construction-dashboard': typeof ConstructionOrgIdConstructionDashboardRoute
  '/construction/$orgId/construction-documents': typeof ConstructionOrgIdConstructionDocumentsRoute
  '/construction/$orgId/construction-projects': typeof ConstructionOrgIdConstructionProjectsRoute
  '/construction/$orgId/construction-teams': typeof ConstructionOrgIdConstructionTeamsRoute
  '/construction/$orgId/gantt': typeof ConstructionOrgIdGanttRoute
  '/construction/$orgId/inbox': typeof ConstructionOrgIdInboxRoute
  '/construction/$orgId/members': typeof ConstructionOrgIdMembersRoute
  '/construction/$orgId/settings': typeof ConstructionOrgIdSettingsRoute
  '/construction/$orgId/': typeof ConstructionOrgIdIndexRoute
  '/construction/$orgId/projects/$projectId/analytics': typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  '/construction/$orgId/projects/$projectId/attachments': typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  '/construction/$orgId/projects/$projectId/overview': typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  '/construction/$orgId/projects/$projectId/settings': typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  '/construction/$orgId/projects/$projectId/tasks': typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  '/construction/$orgId/projects/$projectId/team': typeof ConstructionOrgIdProjectsProjectIdTeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/construction/$orgId'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId/'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
  id:
    | '__root__'
    | '/auth'
    | '/construction/$orgId'
    | '/construction/$orgId/admin'
    | '/construction/$orgId/attachments'
    | '/construction/$orgId/construction-dashboard'
    | '/construction/$orgId/construction-documents'
    | '/construction/$orgId/construction-projects'
    | '/construction/$orgId/construction-teams'
    | '/construction/$orgId/gantt'
    | '/construction/$orgId/inbox'
    | '/construction/$orgId/members'
    | '/construction/$orgId/settings'
    | '/construction/$orgId/'
    | '/construction/$orgId/projects/$projectId/analytics'
    | '/construction/$orgId/projects/$projectId/attachments'
    | '/construction/$orgId/projects/$projectId/overview'
    | '/construction/$orgId/projects/$projectId/settings'
    | '/construction/$orgId/projects/$projectId/tasks'
    | '/construction/$orgId/projects/$projectId/team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRoute
  ConstructionOrgIdRouteRoute: typeof ConstructionOrgIdRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/construction/$orgId': {
      id: '/construction/$orgId'
      path: '/construction/$orgId'
      fullPath: '/construction/$orgId'
      preLoaderRoute: typeof ConstructionOrgIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/construction/$orgId/': {
      id: '/construction/$orgId/'
      path: '/'
      fullPath: '/construction/$orgId/'
      preLoaderRoute: typeof ConstructionOrgIdIndexRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/settings': {
      id: '/construction/$orgId/settings'
      path: '/settings'
      fullPath: '/construction/$orgId/settings'
      preLoaderRoute: typeof ConstructionOrgIdSettingsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/members': {
      id: '/construction/$orgId/members'
      path: '/members'
      fullPath: '/construction/$orgId/members'
      preLoaderRoute: typeof ConstructionOrgIdMembersRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/inbox': {
      id: '/construction/$orgId/inbox'
      path: '/inbox'
      fullPath: '/construction/$orgId/inbox'
      preLoaderRoute: typeof ConstructionOrgIdInboxRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/gantt': {
      id: '/construction/$orgId/gantt'
      path: '/gantt'
      fullPath: '/construction/$orgId/gantt'
      preLoaderRoute: typeof ConstructionOrgIdGanttRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-teams': {
      id: '/construction/$orgId/construction-teams'
      path: '/construction-teams'
      fullPath: '/construction/$orgId/construction-teams'
      preLoaderRoute: typeof ConstructionOrgIdConstructionTeamsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-projects': {
      id: '/construction/$orgId/construction-projects'
      path: '/construction-projects'
      fullPath: '/construction/$orgId/construction-projects'
      preLoaderRoute: typeof ConstructionOrgIdConstructionProjectsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-documents': {
      id: '/construction/$orgId/construction-documents'
      path: '/construction-documents'
      fullPath: '/construction/$orgId/construction-documents'
      preLoaderRoute: typeof ConstructionOrgIdConstructionDocumentsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/construction-dashboard': {
      id: '/construction/$orgId/construction-dashboard'
      path: '/construction-dashboard'
      fullPath: '/construction/$orgId/construction-dashboard'
      preLoaderRoute: typeof ConstructionOrgIdConstructionDashboardRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/attachments': {
      id: '/construction/$orgId/attachments'
      path: '/attachments'
      fullPath: '/construction/$orgId/attachments'
      preLoaderRoute: typeof ConstructionOrgIdAttachmentsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/admin': {
      id: '/construction/$orgId/admin'
      path: '/admin'
      fullPath: '/construction/$orgId/admin'
      preLoaderRoute: typeof ConstructionOrgIdAdminRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/team': {
      id: '/construction/$orgId/projects/$projectId/team'
      path: '/projects/$projectId/team'
      fullPath: '/construction/$orgId/projects/$projectId/team'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdTeamRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/tasks': {
      id: '/construction/$orgId/projects/$projectId/tasks'
      path: '/projects/$projectId/tasks'
      fullPath: '/construction/$orgId/projects/$projectId/tasks'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdTasksRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/settings': {
      id: '/construction/$orgId/projects/$projectId/settings'
      path: '/projects/$projectId/settings'
      fullPath: '/construction/$orgId/projects/$projectId/settings'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdSettingsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/overview': {
      id: '/construction/$orgId/projects/$projectId/overview'
      path: '/projects/$projectId/overview'
      fullPath: '/construction/$orgId/projects/$projectId/overview'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdOverviewRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/attachments': {
      id: '/construction/$orgId/projects/$projectId/attachments'
      path: '/projects/$projectId/attachments'
      fullPath: '/construction/$orgId/projects/$projectId/attachments'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdAttachmentsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
    '/construction/$orgId/projects/$projectId/analytics': {
      id: '/construction/$orgId/projects/$projectId/analytics'
      path: '/projects/$projectId/analytics'
      fullPath: '/construction/$orgId/projects/$projectId/analytics'
      preLoaderRoute: typeof ConstructionOrgIdProjectsProjectIdAnalyticsRouteImport
      parentRoute: typeof ConstructionOrgIdRouteRoute
    }
  }
}

interface ConstructionOrgIdRouteRouteChildren {
  ConstructionOrgIdAdminRoute: typeof ConstructionOrgIdAdminRoute
  ConstructionOrgIdAttachmentsRoute: typeof ConstructionOrgIdAttachmentsRoute
  ConstructionOrgIdConstructionDashboardRoute: typeof ConstructionOrgIdConstructionDashboardRoute
  ConstructionOrgIdConstructionDocumentsRoute: typeof ConstructionOrgIdConstructionDocumentsRoute
  ConstructionOrgIdConstructionProjectsRoute: typeof ConstructionOrgIdConstructionProjectsRoute
  ConstructionOrgIdConstructionTeamsRoute: typeof ConstructionOrgIdConstructionTeamsRoute
  ConstructionOrgIdGanttRoute: typeof ConstructionOrgIdGanttRoute
  ConstructionOrgIdInboxRoute: typeof ConstructionOrgIdInboxRoute
  ConstructionOrgIdMembersRoute: typeof ConstructionOrgIdMembersRoute
  ConstructionOrgIdSettingsRoute: typeof ConstructionOrgIdSettingsRoute
  ConstructionOrgIdIndexRoute: typeof ConstructionOrgIdIndexRoute
  ConstructionOrgIdProjectsProjectIdAnalyticsRoute: typeof ConstructionOrgIdProjectsProjectIdAnalyticsRoute
  ConstructionOrgIdProjectsProjectIdAttachmentsRoute: typeof ConstructionOrgIdProjectsProjectIdAttachmentsRoute
  ConstructionOrgIdProjectsProjectIdOverviewRoute: typeof ConstructionOrgIdProjectsProjectIdOverviewRoute
  ConstructionOrgIdProjectsProjectIdSettingsRoute: typeof ConstructionOrgIdProjectsProjectIdSettingsRoute
  ConstructionOrgIdProjectsProjectIdTasksRoute: typeof ConstructionOrgIdProjectsProjectIdTasksRoute
  ConstructionOrgIdProjectsProjectIdTeamRoute: typeof ConstructionOrgIdProjectsProjectIdTeamRoute
}

const ConstructionOrgIdRouteRouteChildren: ConstructionOrgIdRouteRouteChildren =
  {
    ConstructionOrgIdAdminRoute: ConstructionOrgIdAdminRoute,
    ConstructionOrgIdAttachmentsRoute: ConstructionOrgIdAttachmentsRoute,
    ConstructionOrgIdConstructionDashboardRoute:
      ConstructionOrgIdConstructionDashboardRoute,
    ConstructionOrgIdConstructionDocumentsRoute:
      ConstructionOrgIdConstructionDocumentsRoute,
    ConstructionOrgIdConstructionProjectsRoute:
      ConstructionOrgIdConstructionProjectsRoute,
    ConstructionOrgIdConstructionTeamsRoute:
      ConstructionOrgIdConstructionTeamsRoute,
    ConstructionOrgIdGanttRoute: ConstructionOrgIdGanttRoute,
    ConstructionOrgIdInboxRoute: ConstructionOrgIdInboxRoute,
    ConstructionOrgIdMembersRoute: ConstructionOrgIdMembersRoute,
    ConstructionOrgIdSettingsRoute: ConstructionOrgIdSettingsRoute,
    ConstructionOrgIdIndexRoute: ConstructionOrgIdIndexRoute,
    ConstructionOrgIdProjectsProjectIdAnalyticsRoute:
      ConstructionOrgIdProjectsProjectIdAnalyticsRoute,
    ConstructionOrgIdProjectsProjectIdAttachmentsRoute:
      ConstructionOrgIdProjectsProjectIdAttachmentsRoute,
    ConstructionOrgIdProjectsProjectIdOverviewRoute:
      ConstructionOrgIdProjectsProjectIdOverviewRoute,
    ConstructionOrgIdProjectsProjectIdSettingsRoute:
      ConstructionOrgIdProjectsProjectIdSettingsRoute,
    ConstructionOrgIdProjectsProjectIdTasksRoute:
      ConstructionOrgIdProjectsProjectIdTasksRoute,
    ConstructionOrgIdProjectsProjectIdTeamRoute:
      ConstructionOrgIdProjectsProjectIdTeamRoute,
  }

const ConstructionOrgIdRouteRouteWithChildren =
  ConstructionOrgIdRouteRoute._addFileChildren(
    ConstructionOrgIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRoute,
  ConstructionOrgIdRouteRoute: ConstructionOrgIdRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
